// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rawmultiply
double rawmultiply(arma::mat& m1, arma::mat& m2);
RcppExport SEXP _EfficientTrace_rawmultiply(SEXP m1SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(rawmultiply(m1, m2));
    return rcpp_result_gen;
END_RCPP
}
// smartmultiply
arma::mat smartmultiply(arma::mat& m1, arma::mat& m2, arma::mat& assistmat);
RcppExport SEXP _EfficientTrace_smartmultiply(SEXP m1SEXP, SEXP m2SEXP, SEXP assistmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type assistmat(assistmatSEXP);
    rcpp_result_gen = Rcpp::wrap(smartmultiply(m1, m2, assistmat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EfficientTrace_rawmultiply", (DL_FUNC) &_EfficientTrace_rawmultiply, 2},
    {"_EfficientTrace_smartmultiply", (DL_FUNC) &_EfficientTrace_smartmultiply, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_EfficientTrace(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
